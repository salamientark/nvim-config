# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    config                                             :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: dbaladro <dbaladro@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            # Created: 2024/12/25 13:53:29 by dbaladro          #+#    #+#              #
#    Updated: 2024/12/25 13:53:53 by dbaladro         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:MesloLGS NF 11

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock --i3lock -i ~/.i3/glitch-art-hexagonal-pattern-illusion.png --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

bindsym $mod+Shift+p exec --no-startup-id i3lock -i ~/.i3/glitch-art-hexagonal-pattern-illusion.png
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym $mod + F2 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym $mod + F3 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym $mod + F1 exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym $mod + F4 exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use xrandr to adjust brightness
bindsym $mod + F8 exec --no-startup-id xrandr --output eDP --brightness $(echo "$(xrandr --verbose | grep -m 1 -i brightness | cut -f2 -d ' ') + 0.05" | bc)
bindsym $mod + F7 exec --no-startup-id xrandr --output eDP --brightness $(echo "$(xrandr --verbose | grep -m 1 -i brightness | cut -f2 -d ' ') - 0.05" | bc)

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#  _   _ ___     _      __              
# | | | / __|  _| |_   / _|_  _ _ _  __ 
# | |_| \__ \ |_   _| |  _| || | ' \/ _|
#  \___/|___/   |_|   |_|  \_,_|_||_\__|

# kill focused window 
bindcode $mod+Shift+24 kill 
# bindsym $mod+Shift+a kill

# start a terminal
#bindcode $mod+36 exec i3-sensible-terminal
bindsym $mod+Return exec i3-sensible-terminal

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
#bindsym $mod+z layout tabbed
bindcode $mod+25 layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindcode $mod+38 focus parent
#bindsym $mod+q focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# set $ws1 "1: Neovim"
set $ws1 "1"
set $ws2 "2: Terminal"
set $ws3 "3: Brave"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"

# switch to workspace
bindsym F1 workspace number $ws1
bindsym F2 workspace number $ws2
bindsym F3 workspace number $ws3
bindsym F4 workspace number $ws4
bindsym F5 workspace number $ws5
bindsym F6 workspace number $ws6
bindsym F7 workspace number $ws7
bindsym F8 workspace number $ws8
bindsym F9 workspace number $ws9
bindsym F10 workspace number $ws10
bindsym F11 workspace number $ws11
bindsym F12 workspace number $ws12


# move focused container to workspace
bindcode $mod+10 move container to workspace number $ws1
bindcode $mod+11 move container to workspace number $ws2
bindcode $mod+12 move container to workspace number $ws3
bindcode $mod+13 move container to workspace number $ws4
bindcode $mod+14 move container to workspace number $ws5
bindcode $mod+15 move container to workspace number $ws6
bindcode $mod+16 move container to workspace number $ws7
bindcode $mod+17 move container to workspace number $ws8
bindcode $mod+18 move container to workspace number $ws9
bindcode $mod+19 move container to workspace number $ws10
bindcode $mod+20 move container to workspace number $ws11
bindcode $mod+21 move container to workspace number $ws12
#bindsym $mod+ampersand move container to workspace number $ws1
#bindsym $mod+eacute move container to workspace number $ws2
#bindsym $mod+quotedbl move container to workspace number $ws3
#bindsym $mod+apostrophe move container to workspace number $ws4
#bindsym $mod+5 move container to workspace number $ws5
#bindsym $mod+minus move container to workspace number $ws6
#bindsym $mod+egrave move container to workspace number $ws7
#bindsym $mod+underscore move container to workspace number $ws8
#bindsym $mod+ccedilla move container to workspace number $ws9
#bindsym $mod+agrave move container to workspace number $ws10
#bindsym $mod+parenright move container to workspace $ws11
#bindsym $mod+equal move container to workspace $ws12

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+x exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Lock session
bindsym $mod+Shift+e exec /home/$USER/.config/i3/scripts/lock.sh

#gestion luminosité 
# bindsym XF86MonBrightnessDown exec --no-startup-id light -U 5
# bindsym XF86MonBrightnessUp exec --no-startup-id light -A 5

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym m resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	status_command i3blocks -c /home/$USER/.config/i3blocks/i3blocks.conf

	# position top

	font pango:MesloLGS NF 11
	colors {
		# background #000000
		background $bar-color
		separator #191919
		#                       border          background      text
		focused_workspace       $bgcolor        $bgcolor        $text
		inactive_workspace      $in-bgcolor     $in-bgcolor     $text
		urgent_workspace        $u-bgcolor      $u-bgcolor      $text   
	}
	i3bar_command i3bar --transparency
	tray_output none
}

# Display wallpaper
exec_always feh --bg-fill ~/.config/i3/wallpapers/ink_wave.png

# Allocate application to workspace
for_window [class="Brave-browser"] move  to workspace $ws3

# Transparency with picom composer
exec_always picom --config ~/.config/picom/picom.conf

# Color Schem for windows
# set $bgcolor    #2F5979
set $bgcolor    #587E9B99
set $in-bgcolor #3636364D
set $text       #ffffff
set $u-bgcolor  #ff0000
set $indicator  #a8a3c1
set $in-text    #A4A4A4
set $focused-ws #587E9B80
# set $bar-color	#587E9B0D
set $bar-color	#587E9B0D
#                       border          background      text            indicator (a line which shows where the next window will be placed)     
client.focused          $bgcolor        $bgcolor        $text           $indicator
client.unfocused        $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.focused_inactive $in-bgcolor     $in-bgcolor     $in-text        $in-bgcolor
client.urgent           $u-bgcolor      $u-bgcolor      $text           $u-bgcolor 

###    GAPS    ###
# default gaps
gaps inner 10
gaps outer 5

# gaps config
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
